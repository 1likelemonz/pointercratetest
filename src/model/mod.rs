#[macro_use]
pub mod user;
pub mod audit;
pub mod creator;
pub mod demon;
pub mod player;
pub mod record;
pub mod submitter;

pub use self::{
    demon::Demon,
    player::Player,
    record::Record,
    submitter::Submitter,
    user::{Permissions, User},
};

use diesel::{expression::Expression, pg::Pg, query_builder::BoxedSelectStatement};

// TODO: Alright, the goal here is to (at some point) figure out how to also provide a method that
// provides this traits functionality without boxing the query. The boxed version can then be
// generated by calling that method and `into_boxed()`
pub trait Model {
    type Selection: Expression;
    type QuerySource;

    // rustfmt makes this look really weird lol
    fn boxed_all<'a>(
    ) -> BoxedSelectStatement<'a, <Self::Selection as Expression>::SqlType, Self::QuerySource, Pg>;
}
